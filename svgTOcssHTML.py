import xml.sax

""" This parser reads .svg files. The output are coordinates, formatted to
    CSS clip-paths for polygons."""


class divGenerator( xml.sax.ContentHandler ):
    def __init__(self):
        self.CurrentData = ""

    def startElement(self, tag, attributes):

        self.CurrentData = tag

        if tag == "path":
            style = attributes["style"]

            # polygon_id is the hexadecimal code of the stroke
            # polygons of the same id are different animation stages of the same polygon
            polygon_id = style[54:61]
            background = style[5:12]

            # this condition will filter out most things that are not polygons
            if style[5] == '#':

                # writes the dic classes in order of appearance
                # the one that's on the bottom of the html will be displayed on top
                target.write('<div class="object{}"></div>\n' .format(polygon_id))

    def endElement(self, tag):
      self.CurrentData = ""

#File operations
print ("index.html is generated...")
filename_target = input(index.html)
target = open(filename_target, "w")

filename_origin = input("Name of the .svg file:")
origin = open(filename_origin, "r")

#this wraps the html/css scaffolding
target.write('<!DOCTYPE html>\n')
target.write('\n')
target.write('<html>\n')
target.write('  <head>\n')
target.write('    <meta charset="UTF-8">\n')
target.write('    <title>Mirabellencode</title>\n')
target.write('    <style type="text/css">\n')
target.write('\n')
target.write('      body {\n')
target.write('      font-family: Proxima-Nova, Helvetica, sans-serif;\n')
target.write('      background-color: white;\n')
target.write('      text-align: center;\n')
target.write('      }\n')
target.write('\n')
target.write('      div {\n')
target.write('      }\n')
target.write('\n')
# this content is generated by svgTOcss.py
# can this file be called here?
target.write('\n')
target.write('    </style>\n')
target.write('  </head>\n')
target.write('\n')
target.write('  <body>\n')
target.write('    <div>\n')
target.write('    </div>\n')

# Here, the div classes are generated from the polygon_id
if ( __name__ == "__main__"):
    parser = xml.sax.make_parser()
    parser.setFeature(xml.sax.handler.feature_namespaces, 0)
    Handler = divGenerator()
    parser.setContentHandler(Handler)

    parser.parse(origin)

# rest of the html/css
target.write('    </div>\n')
target.write('  </body>\n')
target.write('</html>\n')

# In the future, here, svgTOcssElefant has to be started

#files are closed!
target.close()
origin.close()

print ("The parser has finished parsing.")
